---
export interface Props {
  title: string;
  description: string;
  preconnectDomains?: string[];
  siteName?: string;
  siteUrl?: string;
  keywords?: string;
}
const url = import.meta.env.PUBLIC_SITE_URL;
const nama = import.meta.env.PUBLIC_SITE_NAME;
const desk = import.meta.env.PUBLIC_SITE_DESCRIPTION;

const {
  title,
  description,
  preconnectDomains = [],
  siteName = nama,
  siteUrl = url,
  keywords,
} = Astro.props;

const ogImageFullUrl = new URL(`${url}/logo.png`, url).href;

const websiteSchema = {
  "@context": "http://schema.org",
  "@type": "WebSite",
  "name": siteName,
  "url": siteUrl,
  "description": description,
  "publisher": {
    "@type": "Organization",
    "name": siteName,
    "logo": {
      "@type": "ImageObject",
      "url": `${siteUrl}/logo.png`
    }
  },
  "potentialAction": {
    "@type": "SearchAction",
    "target": {
      "@type": "EntryPoint",
      "urlTemplate": `${siteUrl}/video/{query}/1`
    },
    "query-input": "required name=query"
  }
};

const organizationSchema = {
  "@context": "http://schema.org",
  "@type": "Organization",
  "name": siteName,
  "url": siteUrl,
  "logo": `${siteUrl}/logo.png`,
  "description": description,
  "sameAs": []
};

const jsonLdSchemas = [
  websiteSchema,
  organizationSchema
];
---
<!doctype html>
<html lang="id">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="robots" content="index, follow" />
    <meta property="og:title" content={title} />
    <link rel="canonical" href={Astro.url.href} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={Astro.url.href} />
    <meta property="og:type" content="website" />
    <meta name="keywords" content={keywords || title} />
    <meta property="og:site_name" content={siteName} />
    <meta property="og:locale" content="id_ID" />
    <meta property="og:image" content={ogImageFullUrl} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImageFullUrl} />
    {preconnectDomains.map(domain => (
      <link rel="preconnect" href={domain} crossorigin/>
    ))}
    <script type="application/ld+json" set:html={JSON.stringify(jsonLdSchemas)} />
    <link rel="stylesheet" href="/global.css" />
  </head>
  <body>
    <header>
      <nav class="main-nav">
        <a href={siteUrl} class="logo" aria-label={`${siteName} - Beranda`}>{siteName}</a>
        <form id="searchForm" action="/video/" method="get" class="search-form" role="search">
          <input type="search" name="query" placeholder="Cari video..." required />
          <button type="submit" aria-label="Mulai pencarian">Cari</button>
        </form>
        <ul class="nav-links">
          <li><a href={`${siteUrl}`}>Home</a></li>
          <li><a href={`${siteUrl}/category/`}>Category</a></li>
          <li><a href={`${siteUrl}/tags/`}>Tags</a></li>
          <li>
            <button id="darkModeToggle" class="dark-mode-toggle" aria-label="Toggle dark mode">☀️</button>
          </li>
        </ul>
      </nav>
    </header>

    <slot />

    <footer>
      <p>&copy; {new Date().getFullYear()} {siteName}. All rights reserved.</p>
    </footer>
    <script src="/scripts/main.js" is:inline></script>
  </body>
</html>
