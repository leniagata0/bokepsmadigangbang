---
export interface Props {
  title: string;
  description: string;
  preconnectDomains?: string[];
  siteName?: string;
  siteUrl?: string;
  keywords?: string;
}
const url = import.meta.env.PUBLIC_SITE_URL;
const nama = import.meta.env.PUBLIC_SITE_NAME;
const desk = import.meta.env.PUBLIC_SITE_DESCRIPTION;
const google = import.meta.env.PUBLIC_GOOGLE_SITE_VERIFICATION;
const yandex = import.meta.env.PUBLIC_YANDEX_SITE_VERIFICATION;

const {
  title,
  description,
  preconnectDomains = [],
  siteName = nama,
  siteUrl = url,
  keywords,
} = Astro.props;

const currentUrl = Astro.url.href;
const siteDescription = desk;

const ogImageFullUrl = new URL(`/logo.png`, siteUrl).href;


const schemaWebSite = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  "url": currentUrl,
  "name": siteName,
  "description": siteDescription,
  "publisher": {
    "@type": "Organization",
    "name": siteName,
    "logo": {
      "@type": "ImageObject",
      "url": `${currentUrl}/logo.png`
    }
  },
  "potentialAction": {
    "@type": "SearchAction",
    "target": {
      "@type": "EntryPoint",
      "urlTemplate": `${currentUrl}/video/{query}/1`
    },
    "query-input": "required name=query"
  }
};

const schemaOrganization = {
  "@context": "https://schema.org",
  "@type": "Organization",
  "name": siteName,
  "url": currentUrl,
  "logo": `${currentUrl}/logo.png`,
  "description": siteDescription,
  // Add more properties if applicable, e.g., contact info, social links
  // "sameAs": [
  //   "https://facebook.com/yourpage",
  //   "https://twitter.com/youraccount"
  // ]
};

let pageJsonLdSchemas = [];
if (Astro.props.jsonLdSchemas) {
  pageJsonLdSchemas = Astro.props.jsonLdSchemas;
}

const finalJsonLdSchemas = [
  ...jsonLdSchemas,
  ...pageJsonLdSchemas
];

---

<!doctype html>
<html lang="id">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <meta name="description" content={description} />
    {keywords && <meta name="keywords" content={keywords} />}
    <meta name="robots" content="index, follow" />
    
        <link rel="canonical" href={currentUrl} />

        <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={currentUrl} />
    <meta property="og:type" content="website" />
    <meta property="og:image" content={ogImageFullUrl} />
    <meta property="og:site_name" content={siteName} />
    <meta property="og:locale" content="id_ID" />

        <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@your_twitter_handle" />
    <meta name="twitter:creator" content="@your_twitter_handle" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImageFullUrl} />

        {google && <meta name="google-site-verification" content={google} />}
    {yandex && <meta name="yandex-verification" content={yandex} />}
    
        {preconnectDomains.map(domain => (
      <link rel="preconnect" href={domain} crossorigin />
    ))}

        <script type="application/ld+json" set:html={JSON.stringify(finalJsonLdSchemas)} />

        <link rel="stylesheet" href="/global.css" />
  </head>
  <body>
    <header>
      <nav class="main-nav">
        <a href={siteUrl} class="logo" aria-label={`${siteName} - Beranda`}>{siteName}</a>
        <form id="searchForm" action={`${siteUrl}/video/`} method="get" class="search-form" role="search">
          <input type="search" name="query" placeholder="Cari video..." required aria-label="Cari video di situs ini" />
          <button type="submit" aria-label="Mulai pencarian">Cari</button>
        </form>
        <ul class="nav-links">
          <li><a href={siteUrl}>Beranda</a></li>
          <li><a href={`${siteUrl}/category/`}>Kategori</a></li>
          <li><a href={`${siteUrl}/tags/`}>Tags</a></li>
          <li>
            <button id="darkModeToggle" class="dark-mode-toggle" aria-label="Toggle dark mode">‚òÄÔ∏è</button>
          </li>
        </ul>
      </nav>
    </header>

    <slot />

    <footer>
      <p>&copy; {new Date().getFullYear()} {siteName}. All rights reserved.</p>
    </footer>

    <script is:inline>document.addEventListener('DOMContentLoaded',()=>{const searchForm=document.getElementById('searchForm');if(searchForm){searchForm.addEventListener('submit',function(event){event.preventDefault();const input=searchForm.querySelector('input[name="query"]');const query=input?input.value.trim():'';if(query){const slugifiedQuery=query.toLowerCase().replace(/\s+/g,'-');window.location.href=`/video/${ slugifiedQuery }/1`}else{window.location.href=`/video/`}})}const toggleButton=document.getElementById('darkModeToggle');const body=document.body;const LIGHT_ICON='‚òÄÔ∏è';const DARK_ICON='üåô';const STORAGE_KEY='darkModeEnabled';function applyTheme(isDarkMode){if(isDarkMode){body.classList.add('dark-mode');toggleButton.textContent=DARK_ICON}else{body.classList.remove('dark-mode');toggleButton.textContent=LIGHT_ICON}}const savedMode=localStorage.getItem(STORAGE_KEY);if(savedMode==='true'){applyTheme(true)}else if(savedMode===null&&window.matchMedia('(prefers-color-scheme: dark)').matches){applyTheme(true)}else{applyTheme(false)}if(toggleButton){toggleButton.addEventListener('click',()=>{const isCurrentlyDarkMode=body.classList.contains('dark-mode');const newMode=!isCurrentlyDarkMode;applyTheme(newMode);localStorage.setItem(STORAGE_KEY,newMode)})}});</script>
  </body>
</html>